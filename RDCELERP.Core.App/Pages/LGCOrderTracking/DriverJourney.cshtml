@page
@model RDCELERP.Core.App.Pages.LGCOrderTracking.LGCVehicleListModel
@{
    ViewData["Title"] = "Vehicle List";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    RDCELERP.Model.Base.AccessRuleViewModel accessRule = (RDCELERP.Model.Base.AccessRuleViewModel)ViewBag.AccessRule;
    var URLPrefixforProd = ViewData["URLPrefixforProd"];
}
@if (ViewData["UserAuth"] != null)
{
    <script type="text/javascript">
        alert("@ViewData["UserAuth"]");
    </script>
}
<div class="row">
    <div class="col-md-12">
        <div class="row align-items-center">
            <div class="card-header">
                <div class="row align-items-center">
                    <div class="col">
                        <h2 class="fs-5 mb-0 card-title">All Journey List</h2>
                    </div>
                </div>
            </div>
          
        </div>
        <div class="row">
            <div class="col-12 mb-4">
                <!-- Tab -->
                <div class="card border-0 shadow noborderradius">
                    <div class="card-body">
                        <div class="tab-content" id="nav-tabContent">
                            <div class="tab-pane fade show active" id="AllVehicleList" role="tabpanel"
                                 aria-labelledby="nav-profile-tab">
                                <div class="table-responsive">
                                    <table id="AllVehicleList_DT" class="table align-items-center table-flush" border="1">
                                        <thead class="thead-light">
                                            <tr>
                                                <th class="border-bottom all notexport" scope="col">Driver Details Id</th>
                                                <th class="border-bottom all notexport" scope="col">Action</th>
                                                <th class="border-bottom all" scope="col">Journey Plan Date</th>
                                                <th class="border-bottom all" scope="col">Vehicle Number</th>
                                                <th class="border-bottom all">Service Partner Name</th>
                                                <th class="border-bottom all" scope="col">Driver Name</th>
                                                <th class="border-bottom all" scope="col">Driver Phone Number</th>                                                
                                                <th class="border-bottom all" scope="col">Driver City</th>
                                                <th class="border-bottom all" scope="col">Assigned Orders Count</th>
                                               
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                        @*List Page Common Filters Code*@
                        <div class="filters">
                            <div class="p-4">
                                <h4 class="">Filters</h4>

                                @* JourneyPlanDate Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkjourneyplandate">
                                    <label for="chkjourneyplandate">Journey Plan Date</label>
                                </p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline" id="journeyplandate" placeholder="Search Journey Plan Date">
                                </div>
                                <div class="filter-seprator"></div>

                                @if (Model.SPId == 0)
                                {
                                    @* Service Partner Name Filter *@
                                    <p class="filterheading">
                                        <input type="checkbox" name="" id="chkservicepartneName">
                                        <label for="chkservicepartneName">Service Partner Name</label>
                                    </p>
                                    <div class="filterbox">
                                        <input type="text" class="form-control d-inline" id="servicepartnerName" placeholder="Search Service Partner Name">
                                    </div>
                                    <div class="filter-seprator"></div>
                                }

                              


                                @* Driver Name Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkdriverName">
                                    <label for="chkdriverName">Driver Name</label>
                                </p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline" id="driverName" placeholder="Search Driver Name">
                                </div>
                                <div class="filter-seprator"></div>

                                @* Phone Number Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkdriverphoneNo">
                                    <label for="chkdriverphoneNo"> Driver Phone Number</label>
                                </p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline" id="driverphoneNo" placeholder="Search Driver Phone Number">
                                </div>
                                <div class="filter-seprator"></div>

                                @* Driver Vehicle No. Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkvehicleno">
                                    <label for="chkvehicleno">Vehicle No.</label>
                                </p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline" id="vehicleno" placeholder="Search Vehicle No.">
                                </div>
                                <div class="filter-seprator"></div>

                                @* Driver City Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkdrivercity">
                                    <label for="chkdrivercity">Driver City</label>
                                </p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline" id="drivercity" placeholder="Search Driver City">
                                </div>
                                <div class="filter-seprator"></div>

                                @* Submit *@
                                <div class="filterbtnwrap">
                                    <a id="btnFilter" class="btn btn-primary">Filter</a>
                                    <a id="btnCloseFilter" class="btn btn-sm btn-secondary py-2">Clear</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End of tab -->
            </div>
        </div>
    </div>
</div>

<script src="~/NewLayout/assets/js/jquery.dataTables.min.js"></script>
<script src="~/NewLayout/vendor/jquery-ui/jquery-ui.js"></script>
<script src="~/NewLayout/assets/js/exportTable.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

<script type="text/javascript">
        //variable declaration
    var table = null;

    //Document (Page Load) ready Function Call
    $(document).ready(function () {

        $("#journeyplandate").datepicker({
            defaultDate: null,
            //maxDate: 'today',
            dateFormat: 'yy-mm-dd', 
            onSelect: function (selectedDate) {
                console.log("Selected date: " + selectedDate);
            }
        });
        //Hide Filters Dive
        $('.filters').hide();
        //Table Count 1 Start
        debugger;
        var url_AllVehicleList = "@URLPrefixforProd/api/LGCMobileApp/AllApprovedVehicleListSP?companyId=" + @ViewBag.CompanyId+"&SPId=" + @Model.SPId;
        DataTableAllVehicleList(url_AllVehicleList);
        //End Table Count 1
    });

    //Filter Close Button Click Event 
    $('#btnCloseFilter').click(function () {
        $('#journeyplandate').val("");
        $('#servicepartnerName').val("");
        $('#driverName').val("");
        $('#driverphoneNo').val("");
        $('#vehicleno').val("");
        $('#drivercity').val("");
        // Unchecks it
        $('.filters input[type="checkbox"]').prop('checked', false);
        $('.filterbox').hide();
        CommonFilter();
    });

    //Check Box Journey Plan Date change Event
    $("#chkjourneyplandate").click(function () {
        if (!this.checked) {
            $('#journeyplandate').val("");
        }
    });

    //Check Box Service Partne Name change Event
    $("#chkservicepartneName").click(function () {
        if (!this.checked) {
            $('#servicepartnerName').val("");
        }
    });

    //Check Box Driver Name change Event
    $("#chkdriverName").click(function () {
        if (!this.checked) {
            $('#driverName').val("");
        }
    });

    //Check Box Driver Phone Number change Event
    $("#chkdriverphoneNo").click(function () {
        if (!this.checked) {
            $('#driverphoneNo').val("");
        }
    });

    //Check Box Vehicle no. change Event
    $("#chkvehicleno").click(function () {
        if (!this.checked) {
            $('#vehicleno').val("");
        }
    });

    //Check Box Driver City change Event
    $("#chkdrivercity").click(function () {
        if (!this.checked) {
            $('#drivercity').val("");
        }
    });

    // Follow-up list multi Search Filter
    $('#btnFilter').click(function () {
        CommonFilter();
    });

    function GetURLData(journeyplandate = null, servicepartnerName = null, driverName = null, driverphoneNo = null, vehicleno = null, drivercity = null) {
        var urlData = "";
        if (journeyplandate != null) {
            urlData += '&journeyplandate=' + journeyplandate;
        }
        if (servicepartnerName != null) {
            urlData += '&servicepartnerName=' + servicepartnerName;
        }
        if (driverName != null) {
            urlData += '&driverName=' + driverName;
        }
        if (driverphoneNo != null) {
            urlData += '&driverphoneNo=' + driverphoneNo;
        }
        if (vehicleno != null) {
            urlData += '&vehicleno=' + vehicleno;
        }
        if (drivercity != null) {
            urlData += '&drivercity=' + drivercity;
        }
        return urlData;
    }

    //Filter Function
        function CommonFilter() {

        var journeyplandate = $('#journeyplandate').val();
        journeyplandate = $('#journeyplandate').val() == "" ? null : $('#journeyplandate').val();

        var servicepartnerName = $('#servicepartnerName').val();
        servicepartnerName = $('#servicepartnerName').val() == "" ? null : $('#servicepartnerName').val();

        var driverName = $('#driverName').val();
        driverName = $('#driverName').val() == "" ? null : $('#driverName').val();

        var driverphoneNo = $('#driverphoneNo').val();
        driverphoneNo = $('#driverphoneNo').val() == "" ? null : $('#driverphoneNo').val();

        var vehicleno = $('#vehicleno').val();
        vehicleno = $('#vehicleno').val() == "" ? null : $('#vehicleno').val();

        var drivercity = $('#drivercity').val();
        drivercity = $('#drivercity').val() == "" ? null : $('#drivercity').val();

        debugger;
        var urlData = GetURLData(journeyplandate, servicepartnerName, driverName, driverphoneNo, vehicleno, drivercity);

        var url = null;
        url = "@ViewData["URLPrefixforProd"]/api/LGCMobileApp/StartJourneyList?companyId=" + @ViewBag.CompanyId+ "&SPId=" + @Model.SPId+urlData;


        var url_AllVehicleList = "@URLPrefixforProd/api/LGCMobileApp/AllApprovedVehicleListSP?companyId=" + @ViewBag.CompanyId+"&SPId=" + @Model.SPId +urlData;

        // Destroy the existing DataTable
        table = $('#AllVehicleList_DT').DataTable();
        // Destroy the existing DataTable
        table.clear().destroy();
        //Re-Initialize Datatable
        DataTableAllVehicleList(url_AllVehicleList);

        $('.filters').hide();
    }

        //This Datatable function is calling for Method
        function DataTableAllVehicleList(url) {
            table = $('#AllVehicleList_DT').DataTable({
                "order": [[0, 'desc']],
                "processing": true,
                "serverSide": true,
                "scrollX": true,
                "filter": true,
                "searching": false,
                "dom": 'Bfrtlp',
                "buttons": [
                    {
                        text: '<button class="btn btn-primary datatablebtn" id="filterboxbtnright"><i class="fa-solid fa-filter"></i></button>',
                        action: function (e, dt, node, config) {
                            $('.filters').toggle();
                            //$('.content').toggleClass('maincontent');
                            //$('.filters').insertBefore('table.dataTable');
                        }
                    },
                    {
                        extend: 'excel', text: '<div class="exportbtnwrapper"><button class="btn btn-primary" id="exportbtn"><i class="fa-solid fa-download"></i> Download Excel</button></div>', id: "exportbtn",
                        title: 'Follow-Up QC List',
                        action: newexportaction,
                        exportOptions: {
                            modifier: {
                                // DataTables core
                                order: 'index',  // 'current', 'applied', 'index',  'original'
                                page: 'all',      // 'all',     'current' for export all pages data
                                search: 'none'     // 'none',    'applied', 'removed'
                            },
                            columns: ':not(.notexport)'
                        }
                    },
                ],
                "oLanguage": {
                    "sEmptyTable": "No Data found"
                },
                "ajax": {
                    "url": url,
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs": [{
                    "targets": [0],
                    "visible": false,
                    "searchable": true
                }],
                "responsive": true,
                "columns": [
                    { "data": "driverDetailsId", "name": "DriverDetailsId", "autoWidth": true },
                    { "data": "action", "name": "Action", "autoWidth": true },
                    { "data": "journeyPlanDate", "name": "JourneyPlanDate", "autoWidth": true },
                    { "data": "vehicleNumber", "name": "VehicleNumber", "autoWidth": true },
                    { "data": "servicePartnerBusinessName", "name": "ServicePartnerBusinessName", "autoWidth": true },
                    { "data": "driverName", "name": "DriverName", "autoWidth": true },
                    { "data": "driverPhoneNumber", "name": "DriverPhoneNumber", "autoWidth": true },                    
                    { "data": "driverCity", "name": "DriverCity", "autoWidth": true },
                    { "data": "assignedOrdersCount", "name": "AssignedOrdersCount", "autoWidth": true }
                    
                ]
            });
        }
        //This Datatable function is calling for Method

        function DataTableAssignedVehicleList(url) {
            table = $('#AssignedVehicleList_DT').DataTable({
                "order": [[0, 'desc']],
                "processing": true,
                "serverSide": true,
                "scrollX": true,
                "filter": true,
                "searching": false,
                "dom": 'Bfrtlp',
                "buttons": [
                    {
                        text: '<button class="btn btn-primary datatablebtn" id="filterboxbtnright"><i class="fa-solid fa-filter"></i></button>',
                        action: function (e, dt, node, config) {
                            $('.filters').toggle();
                            //$('.content').toggleClass('maincontent');
                            //$('.filters').insertBefore('table.dataTable');
                        }
                    },
                    {
                        text: '<div class="datatablebtn viewableWithAddPermission" id="GenerateCancelOrder"><button class="btn btn-primary" onclick="CancelConfirm()" id="CancelOrder"><i class="fa-solid fa-arrow-rotate-left"></i>&nbsp; Cancel Selected Order</button></div>', id: "CancelOrder",
                        title: 'Cancel Order',
                          },
                    {
                        extend: 'excel', text: '<div class="exportbtnwrapper"><button class="btn btn-primary" id="exportbtn"><i class="fa-solid fa-download"></i> Download Excel</button></div>', id: "exportbtn",
                        title: 'Follow-Up QC List',
                        action: newexportaction,
                        exportOptions: {
                            modifier: {
                                // DataTables core
                                order: 'index',  // 'current', 'applied', 'index',  'original'
                                page: 'all',      // 'all',     'current' for export all pages data
                                search: 'none'     // 'none',    'applied', 'removed'
                            },
                            columns: ':not(.notexport)'
                        }
                    }
                ],
                "oLanguage": {
                    "sEmptyTable": "No Data found"
                },
                "ajax": {
                    "url": url,
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs": [{
                    "targets": [0],
                    "visible": false,
                    "searchable": true
                }],

                "responsive": true,
                "columns": [
                    { "data": "id", "name": "Id", "autoWidth": true },
                    { "data": "action", "name": "Action", "autoWidth": true, "orderable": false },
                    { "data": "companyName", "CompanyName": "SponsorName", "autoWidth": true },
                    { "data": "regdNo", "name": "RegdNo", "autoWidth": true },
                    { "data": "custCity", "name": "CustCity", "autoWidth": true },
                    { "data": "productCategory", "name": "ProductCategory", "autoWidth": true },
                    { "data": "productCondition", "name": "ProductCondition", "autoWidth": true },
                    { "data": "statusCode", "name": "StatusCode", "autoWidth": true },
                    { "data": "orderCreatedDate", "name": "OrderCreatedDate", "autoWidth": true },
                    { "data": "preferredQCDate", "name": "PreferredQCDate", "autoWidth": true },
                    { "data": "rescheduleDate", "name": "RescheduleDate", "autoWidth": true },
                    { "data": "reschedulecount", "name": "Reschedulecount", "autoWidth": true },
                    { "data": "linksendDate", "name": "LinksendDate", "autoWidth": true },
                    { "data": "edit", "name": "Action", "autoWidth": true, "orderable": false },
                    //Fields for Download Excel
                    { "data": "custFullname", "name": "CustFullname", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "custAddress", "name": "CustAddress", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "custState", "name": "CustState", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "zipCode", "name": "ZipCode", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "qccomments", "name": "Qccomments", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "qualityAfterQc", "name": "QualityAfterQc", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "priceAfterQc", "name": "PriceAfterQc", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "qcdate", "name": "Qcdate", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "statusId", "name": "StatusId", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "createdBy", "name": "CreatedBy", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "createdDate", "name": "CreatedDate", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "modifiedBy", "name": "ModifiedBy", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "modifiedDate", "name": "ModifiedDate", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "isPaymentConnected", "name": "IsPaymentConnected", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "collectedAmount", "name": "CollectedAmount", "autoWidth": true, "orderable": false, "visible": false },
                    { "data": "isActive", "name": "IsActive", "autoWidth": true, "orderable": false, "visible": false }
                ]
            });
        }

        //All Data Export--
        function newexportaction(e, dt, button, config) {
            var self = this;
            var oldStart = dt.settings()[0]._iDisplayStart;
            dt.one('preXhr', function (e, s, data) {
                // Just this once, load all data from the server...
                data.start = 0;
                data.length = 2147483647;
                dt.one('preDraw', function (e, settings) {
                    // Call the original action function
                    if (button[0].className.indexOf('buttons-copy') >= 0) {
                        $.fn.dataTable.ext.buttons.copyHtml5.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-excel') >= 0) {
                        $.fn.dataTable.ext.buttons.excelHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
                    }
                    dt.one('preXhr', function (e, s, data) {
                        // DataTables thinks the first item displayed is index 0, but we're not drawing that.
                        // Set the property to what it was before exporting.
                        settings._iDisplayStart = oldStart;
                        data.start = oldStart;
                    });
                    // Reload the grid with the original page. Otherwise, API functions like table.cell(this) don't work properly.
                    setTimeout(dt.ajax.reload, 0);
                    // Prevent rendering of the full data to the DOM
                    return false;
                });
            });
            // Requery the server with the new one-time export settings
            dt.ajax.reload();
        };
        //For Export Buttons available inside jquery-datatable "server side processing" - End
</script>
