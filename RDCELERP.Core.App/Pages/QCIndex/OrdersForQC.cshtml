@page
@model RDCELERP.Core.App.Pages.QCIndex.OrdersForQCModel
@{
    ViewData["Title"] = "Orders For QC";
    Layout = "_Layout";
    RDCELERP.Model.Base.AccessRuleViewModel accessRule = (RDCELERP.Model.Base.AccessRuleViewModel)ViewBag.AccessRule;
    var URLPrefixforProd = ViewData["URLPrefixforProd"];
    var loginUserId = Model.searchFilterVM.UserId;
    bool IsCheckBoxShown = Model.IsCheckBoxShown;
}
@if (ViewData["UserAuth"] != null)
{
    <script type="text/javascript">
        alert("@ViewData["UserAuth"]");
    </script>
}
<style>
    .ui-dialog-titlebar-close {
        display: none;
    }

    .ui-dialog-buttonset button {
        background: #333;
    color: #fff;
    padding: 6px 18px;
    border-radius: 22px;
    }


    .ui-draggable .ui-dialog-titlebar {
        background: #100c21;
        color: #fff;
    }

    /* Popup styles added by ashwin */
    .popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #f9f9f9;
        padding: 20px;
        border: 1px solid #ccc;
        z-index: 1000;
    }

    /* Overlay styles added by ashwin */
    .overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
    }

</style>

<div class="row">
    <div class="col-md-12">
        <div class="row">
            <div class="col-12 mb-4">
                <div class="card border-0 shadow">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                <h2 class="fs-5 fw-bold mb-0">Orders For QC</h2>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (Model.IsCheckBoxShown == true)
                        {
                            <div class="col-md-4 mb-2">
                                <form method="post" id="exportForm">
                                    <input type="hidden" asp-for="MyIds" id="hdnExchangeorderIds" />
                                    <input type="hidden" asp-for="assignUserId" id="hdnassignUserId" />
                                    <input type="hidden" asp-for="IsCheckBoxShown" id="hdnIsCheckBoxShown" />
                                    @*                                         <button  id="exportbtn" type="submit" asp-page-handler="AllocateOrders" class="btn btn-primary mb-4" disabled="disabled"><i class="fa-solid fa-plus"></i>&nbsp; Assign QC</button>
                                *@
                                </form>

                                    <!-- Popup Content -->
                                    <div class="overlay" id="overlay">

                                    </div>
                                    <button class="btn btn-primary mb-2" id="openPopup" @* asp-page-handler="AllocateOrders" *@ disabled ><i class="fa-solid fa-plus"></i>&nbsp; Assign QC</button>

                                <div class="popup p-4 py-5" id="popup" style="min-width:340px;">
                                    @*<h5>Select an option</h5>*@
                                    @* <div class="filterbox"> *@
                                    @* <select asp-for="assignUserId" id="selectOption"  class="form-control d-inline" asp-items="ViewBag.QCUsersList"> *@
                                    <select id="selectOption" asp-items="ViewBag.QCUsersList">
                                        <option value='0'>--Select User--</option>
                                    </select>
                                    <button id="closePopup" class="btn btn-secondary w-100 mt-3">Close</button>

                                    @* <span asp-validation-for="searchFilterVM.ProductCatId" class="text-danger"></span> *@
                                    @*                                         </div>
                                *@

                                </div>
                            </div>



                        }


                        <div class="table-responsive">
                            <table id="AllOrderForQCDatatable" class="table table-striped dt-responsive mainshadow" width="100%" border="1">
                                <thead class="thead-light">
                                    <tr>
                                        <th class="all notexport">Id</th>
                                        <th class="all notexport">Actions</th>
                                        @if (IsCheckBoxShown)
                                        {
                                            <th class="all notexport">
                                                <input type='checkbox' id='select_all' />
                                            </th>
                                        }
                                        @* <th class="all notexport">
                                        <input type='checkbox' id='select_all' />
                                        </th> *@
                                        <th class="all">Company</th>
                                        <th class="all">Regd No.</th>
                                        <th class="all">AssignBy</th>
                                        <th class="all">AssignTo</th>
                                        <th class="all">Customer City</th>
                                        <th class="all">Product Group</th>
                                        <th class="all">Cust. Declare Quality</th>
                                        <th class="all">Status Code</th>
                                        <th class="all">Order Date & Time</th>
                                        <th class="all">Preferred QC Date & Time</th>
                                        <th class="all">QC Reschedule Date</th>
                                        <th class="all">Reschedule Count</th>
                                        @*this field use for Excel inport*@
                                        <th class="all">CustomerFullName</th>
                                        <th class="all">CustomerAddress</th>
                                        <th class="all">CustomerState</th>
                                        <th class="all">QCComments</th>
                                        <th class="all">QualityAfterQC</th>
                                        <th class="all">PriceAfterQC</th>
                                        <th class="all">QCDate</th>
                                        <th class="all">StatusId</th>
                                        <th class="all">CreatedBy</th>
                                        <th class="all">CreatedDate</th>
                                        <th class="all">ModifiedBy</th>
                                        <th class="all">ModifiedDate</th>
                                        <th class="all">IsPaymentConnected</th>
                                        <th class="all">CollectedAmount</th>
                                        <th class="all">IsActive</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                        @*List Page Common Filters Code VK 19-May*@
                        <div class="filters">
                            <div class="p-4">
                                <h4 class="">Filters</h4>
                                @* Order Date Range Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkOrderDateRange">
                                    <label for="chkOrderDateRange">Order Date Range</label>
                                </p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline mb-2" id="orderStartDate" readonly placeholder="Start Date" autocomplete="off">
                                    <input type="text" class="form-control d-inline mb-2" id="orderEndDate" readonly placeholder="End Date" autocomplete="off">
                                </div>
                                <div class="filter-seprator"></div>

                                @* Reschedule Date Range Filter *@
                                <p class="filterheading"><input type="checkbox" name="" id="chkRescheduleDateRange"><label for="chkRescheduleDateRange">Reschedule Date Range</label></p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline mb-2" id="resheduleStartDate" readonly placeholder="Start Date" autocomplete="off">
                                    <input type="text" class="form-control d-inline mb-2" id="resheduleEndDate" readonly placeholder="End Date" autocomplete="off">
                                </div>
                                <div class="filter-seprator"></div>

                                @* Company Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkcompanyName">
                                    <label for="chkcompanyName">Company Name</label>
                                </p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline" id="companyName" placeholder="Search Company Name">
                                </div>
                                <div class="filter-seprator"></div>

                                @* Product Group Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkProductCategory">
                                    <label for="chkProductCategory">Product Group</label>
                                </p>
                                <div class="filterbox">
                                    <select asp-for="searchFilterVM.ProductCatId" id="ddlprodcatid" class="form-control d-inline" asp-items="ViewBag.ProductGroup">
                                        <option value='0'>--Product Cat--</option>
                                    </select>
                                    <span asp-validation-for="searchFilterVM.ProductCatId" class="text-danger"></span>
                                </div>
                                <div class="filter-seprator"></div>

                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkProductType">
                                    <label for="chkProductType">Product Type</label>
                                </p>
                                <div class="filterbox">
                                    <select asp-for="searchFilterVM.ProductTypeId" id="ddlprodcattypeid" class="form-control d-inline" asp-items="ViewBag.productTypeList">
                                        <option value='0'>--Product Type--</option>
                                    </select>
                                    <span asp-validation-for="searchFilterVM.ProductTypeId" class="text-danger"></span>
                                </div>
                                <div class="filter-seprator"></div>

                                @* Regd No Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkregdNo">
                                    <label for="chkregdNo">Regd No</label>
                                </p>
                                <div class="filterbox">
                                    @*<input type="text" class="form-control d-inline" id="regdNo" placeholder="Search RegdNo">*@
                                    <input type="text" class="form-control d-inline" id="regdNo" placeholder="Search RegdNo">
                                </div>
                                <div class="filter-seprator"></div>

                                @* Phone Number Filter *@
                                <p class="filterheading">
                                    <input type="checkbox" name="" id="chkPhoneNo">
                                    <label for="chkPhoneNo">Phone Number</label>
                                </p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline" id="phoneNo" placeholder="Search Phone Number">
                                </div>
                                <div class="filter-seprator"></div>

                                @* Cust City Filter *@
                                <p class="filterheading"><input type="checkbox" name="" id="chkCustCity"><label for="chkCustCity">Customer City</label></p>
                                <div class="filterbox">
                                    <input type="text" class="form-control d-inline" id="custCity" placeholder="Search City">
                                </div>
                                <div class="filter-seprator"></div>
                                @*User Filter*@
                                <p class="filterheading"><input type="checkbox" name="" id="chkUserId"><label for="chkUserId">Created By Me</label></p>
                                <input type="hidden" id="userId">
                                <div class="filter-seprator"></div>

                                @* Submit Filter *@
                                <div class="filterbtnwrap">
                                    <a id="btnFilter" class="btn btn-primary">Filter</a>
                                    <a id="btnCloseFilter" class="btn btn-sm btn-secondary py-2">Clear</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/NewLayout/assets/js/jquery.dataTables.min.js"></script>
<script src="~/NewLayout/vendor/jquery-ui/jquery-ui.js"></script>
<script src="~/NewLayout/assets/js/exportTable.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>


<script type="text/javascript">
     $(window).on('pageshow', function () { 
    $('.filters input[type="checkbox"]').prop('checked', false);
    $('.filterbox').hide();
    });

    //variable declaration

    var table = null;

    //Document (Page Load) ready Function Call
    $(document).ready(function () {

        //Assign QC Button Fn

        $('body').on('change', '.checkboxinput', function() {

            debugger;

            var assignCheckFlag = false;

            $('.checkboxinput').each(function () {
                if (this.checked) {
                    assignCheckFlag = true;
                }
            });

            if (!assignCheckFlag) {
                $('#openPopup').prop('disabled', true);
            } else {
                $('#openPopup').prop('disabled', false);
            }
        })


        //Date Picker
        $("#orderStartDate").datepicker({
            defaultDate: null,
            maxDate: 'today',
            onSelect: function (selectedDate) {
                $("#orderEndDate").datepicker("option", "minDate", selectedDate);
            }
        });
        $("#orderEndDate").datepicker({
            defaultDate: null,
            maxDate: 'today',
        });
        $("#resheduleStartDate").datepicker({
            defaultDate: null,
            onSelect: function (selectedDate) {
                $("#resheduleEndDate").datepicker("option", "minDate", selectedDate);
            }
        });
        $("#resheduleEndDate").datepicker({
            defaultDate: null,
        });
        //TblConfiguration Set TblReloadTime
        var tblReloadTime = @Model.TblReloadTimeMs;
        //Hide Filters Dive
        $('.filters').hide();
        //Table Count 1 Start
        var url = "@URLPrefixforProd/api/ExchangeOrders/ExchangeListForOrdersQC?companyId=" + @ViewBag.CompanyId + '&userId=' + @loginUserId;
        var hidenchkbox = $('#hdnIsCheckBoxShown').val();
        if (hidenchkbox) {
            DataTable(url);

        }
        else {
            DataTable1(url);

        }

        // DataTable(url);

        //End Table Count 1
        setInterval(function () {
            table.ajax.reload(null, false);
        }, tblReloadTime);
    });

    //Filter Close Button Click Event
    $('#btnCloseFilter').click(function () {
        $('#orderStartDate').val("");
        $('#orderEndDate').val("");
        $('#resheduleStartDate').val("");
        $('#resheduleEndDate').val("");
        $('#ddlprodcatid').val(0);
        $('#ddlprodcattypeid').empty();
        $('#ddlprodcattypeid').append("<option value='0'>--Product Type--</option>");
        $('#regdNo').val("");
        $('#phoneNo').val("");
        $('#companyName').val("");
        $('#custCity').val("");
        $('#userId').val("");
        // Unchecks it
        $('.filters input[type="checkbox"]').prop('checked', false);
        $('.filterbox').hide();
        CommonFilter();
    });

    //Check Box Date Range change Event
    $("#chkOrderDateRange").click(function () {
        if (!this.checked) {
            $('#orderStartDate').val("");
            $('#orderEndDate').val("");
        }
    });
    //Check Box Date Range change Event
    $("#chkRescheduleDateRange").click(function () {
        if (!this.checked) {
            $('#resheduleStartDate').val("");
            $('#resheduleEndDate').val("");
        }
    });

    //Check Box Product Category change Event
    $("#chkProductCategory").click(function () {
        if (!this.checked) {
            $('#ddlprodcatid').val(0);
        }
    });

    //On Change Event for Get Product type by Product Category
    $("#ddlprodcatid").change(function () {
        $.get("@URLPrefixforProd/api/Dropdown/OnGetProductCategoryTypeAsync?productCatId=" + $(this).val()).done(function (data) {
            $("#ddlprodcattypeid").empty();
            $("#ddlprodcattypeid").append($("<option></option>").val('0').html('Select ProductType'));
            $.each(data, function (i, producttype) {
                $("#ddlprodcattypeid").append($("<option></option>").val(producttype.text).html(producttype.value));
            });
        });
    });

    //Check Box Product Type change Event
    $("#chkProductType").click(function () {
        if (!this.checked) {
            $('#ddlprodcattypeid').val(0);
        }
    });

    //Check Box Regd Number change Event
    $("#chkregdNo").click(function () {
        if (!this.checked) {
            $('#regdNo').val("");
        }
    });

    //Check Box Phone Number change Event
    $("#chkPhoneNo").click(function () {
        if (!this.checked) {
            $('#phoneNo').val("");
        }
    });

    //Check Box Brand Name change Event
    $("#chkcompanyName").click(function () {
        if (!this.checked) {
            $('#companyName').val("");
        }
    });

    //Check Box Customer City change Event
    $("#chkCustCity").click(function () {
        if (!this.checked) {
            $('#custCity').val("");
        }
    });

    //Check Box logged in user change Event
    $("#chkUserId").click(function () {
        if (!this.checked) {
            $('#userId').val("");
        }
        else {
            $('#userId').val("@Model.searchFilterVM.UserId");
        }
    });

    // Follow-up list multi Search Filter
    $('#btnFilter').click(function () {
        CommonFilter();
    });

    //old code for data table

    function DataTable(url) {
        table = $('#AllOrderForQCDatatable').DataTable({
            "order": [[0, 'desc']],
            "processing": true,
            "serverSide": true,
            "scrollX": true,
            "filter": true,
            "searching": false,
            "dom": 'Bfrtlp',
            "buttons": [
                {
                    text: '<button class="btn btn-primary" id="filterboxbtnright"><i class="fa-solid fa-filter"></i></button>',
                    action: function (e, dt, node, config) {
                        $('.filters').toggle();
                        //$('.content').toggleClass('maincontent');
                        //$('.filters').insertBefore('table.dataTable');
                    }
                },
                {
                    extend: 'excel', text: '<div class="exportbtnwrapper "><button class="btn btn-primary" id="exportbtn"><i class="fa-solid fa-download"></i> Download Excel</button></div>', id: "exportbtn",
                    title: 'Orders for QC',
                    action: newexportaction,
                    exportOptions: {
                        modifier: {
                            // DataTables core
                            order: 'index',  // 'current', 'applied', 'index',  'original'
                            page: 'all',      // 'all',     'current' for export all pages data
                            search: 'none'     // 'none',    'applied', 'removed'
                        },
                        columns: ':not(.notexport)'
                    }
                }
            ],
            "oLanguage": {
                "sEmptyTable": "No Record found"
            },
            "ajax": {
                "url": url,
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs": [{
                "targets": [0],
                "visible": false,
                "searchable": false
            }],

            "responsive": true,

            "columns": [
                { "data": "id", "name": "Id", "autoWidth": true },
                { "data": "action", "name": "Action", "autoWidth": true, "orderable": false },
                { "data": "actionChkbox", "name": "ActionChkbox", "autoWidth": true, "orderable": false },
                { "data": "companyName", "CompanyName": "SponsorName", "autoWidth": true },
                { "data": "regdNo", "name": "RegdNo", "autoWidth": true },
                { "data": "assignedBy", "name": "AssignedBy", "autoWidth": true },
                { "data": "assignedTo", "name": "AssignedTo", "autoWidth": true },
                { "data": "custCity", "name": "CustCity", "autoWidth": true },
                { "data": "productCategory", "name": "ProductCategory", "autoWidth": true },
                { "data": "productCondition", "name": "ProductCondition", "autoWidth": true },
                { "data": "statusCode", "name": "StatusCode", "autoWidth": true },
                { "data": "orderCreatedDate", "name": "OrderCreatedDate", "autoWidth": true },
                { "data": "preferredQCDate", "name": "PreferredQCDate", "autoWidth": true },
                { "data": "rescheduleDate", "name": "RescheduleDate", "autoWidth": true },
                { "data": "reschedulecount", "name": "Reschedulecount", "autoWidth": true },
                //Fields for Download Excel
                { "data": "custFullname", "name": "CustFullname", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "custAddress", "name": "CustAddress", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "custState", "name": "CustState", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "qccomments", "name": "Qccomments", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "qualityAfterQc", "name": "QualityAfterQc", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "priceAfterQc", "name": "PriceAfterQc", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "qcdate", "name": "Qcdate", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "statusId", "name": "StatusId", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "createdBy", "name": "CreatedBy", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "createdDate", "name": "CreatedDate", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "modifiedBy", "name": "ModifiedBy", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "modifiedDate", "name": "ModifiedDate", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "isPaymentConnected", "name": "IsPaymentConnected", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "collectedAmount", "name": "CollectedAmount", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "isActive", "name": "IsActive", "autoWidth": true, "orderable": false, "visible": false }
            ]

        });
    }
    //end old code for data table


    ///start non checkbox condition
    function DataTable1(url) {
        table = $('#AllOrderForQCDatatable').DataTable({
            "order": [[0, 'desc']],
            "processing": true,
            "serverSide": true,
            "scrollX": true,
            "filter": true,
            "searching": false,
            "dom": 'Bfrtlp',
            "buttons": [
                {
                    text: '<button class="btn btn-primary" id="filterboxbtnright"><i class="fa-solid fa-filter"></i></button>',
                    action: function (e, dt, node, config) {
                        $('.filters').toggle();
                        //$('.content').toggleClass('maincontent');
                        //$('.filters').insertBefore('table.dataTable');
                    }
                },
                {
                    extend: 'excel', text: '<div class="exportbtnwrapper "><button class="btn btn-primary" id="exportbtn"><i class="fa-solid fa-download"></i> Download Excel</button></div>', id: "exportbtn",
                    title: 'Orders for QC',
                    action: newexportaction,
                    exportOptions: {
                        modifier: {
                            // DataTables core
                            order: 'index',  // 'current', 'applied', 'index',  'original'
                            page: 'all',      // 'all',     'current' for export all pages data
                            search: 'none'     // 'none',    'applied', 'removed'
                        },
                        columns: ':not(.notexport)'
                    }
                }
            ],
            "oLanguage": {
                "sEmptyTable": "No Record found"
            },
            "ajax": {
                "url": url,
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs": [{
                "targets": [0],
                "visible": false,
                "searchable": false
            }],

            "responsive": true,

            "columns": [
                { "data": "id", "name": "Id", "autoWidth": true },
                { "data": "action", "name": "Action", "autoWidth": true, "orderable": false },
                { "data": "companyName", "CompanyName": "SponsorName", "autoWidth": true },
                { "data": "regdNo", "name": "RegdNo", "autoWidth": true },
                { "data": "assignedBy", "name": "AssignedBy", "autoWidth": true },
                { "data": "assignedTo", "name": "AssignedTo", "autoWidth": true },
                { "data": "custCity", "name": "CustCity", "autoWidth": true },
                { "data": "productCategory", "name": "ProductCategory", "autoWidth": true },
                { "data": "productCondition", "name": "ProductCondition", "autoWidth": true },
                { "data": "statusCode", "name": "StatusCode", "autoWidth": true },
                { "data": "orderCreatedDate", "name": "OrderCreatedDate", "autoWidth": true },
                { "data": "preferredQCDate", "name": "PreferredQCDate", "autoWidth": true },
                { "data": "rescheduleDate", "name": "RescheduleDate", "autoWidth": true },
                { "data": "reschedulecount", "name": "Reschedulecount", "autoWidth": true },
                //Fields for Download Excel
                { "data": "custFullname", "name": "CustFullname", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "custAddress", "name": "CustAddress", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "custState", "name": "CustState", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "qccomments", "name": "Qccomments", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "qualityAfterQc", "name": "QualityAfterQc", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "priceAfterQc", "name": "PriceAfterQc", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "qcdate", "name": "Qcdate", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "statusId", "name": "StatusId", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "createdBy", "name": "CreatedBy", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "createdDate", "name": "CreatedDate", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "modifiedBy", "name": "ModifiedBy", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "modifiedDate", "name": "ModifiedDate", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "isPaymentConnected", "name": "IsPaymentConnected", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "collectedAmount", "name": "CollectedAmount", "autoWidth": true, "orderable": false, "visible": false },
                { "data": "isActive", "name": "IsActive", "autoWidth": true, "orderable": false, "visible": false }
            ]

        });
    }

    ///end non checkbox condition

    function GetURLData(orderStartDate = null, orderEndDate = null, resheduleStartDate = null, resheduleEndDate = null, companyName = null, productCatId = null, productTypeId = null, regdNo = null, phoneNo = null, custCity = null, userId = null) {
        var urlData = "";
        if (orderStartDate != null && orderEndDate != null) {
            urlData += '&orderStartDate=' + orderStartDate + '&orderEndDate=' + orderEndDate;
        }
        if (resheduleStartDate != null && resheduleEndDate != null) {
            urlData += '&resheduleStartDate=' + resheduleStartDate + '&resheduleEndDate=' + resheduleEndDate;
        }
        if (companyName != null) {
            urlData += '&companyName=' + companyName;
        }
        if (productCatId != null && productCatId > 0) {
            urlData += '&productCatId=' + productCatId;
        }
        if (productTypeId != null && productTypeId > 0) {
            urlData += '&productTypeId=' + productTypeId;
        }
        if (regdNo != null) {
            urlData += '&regdNo=' + regdNo;
        }
        if (phoneNo != null) {
            urlData += '&phoneNo=' + phoneNo;
        }
        if (custCity != null) {
            urlData += '&custCity=' + custCity;
        }
        if (userId != null) {
            urlData += '&userId=' + userId;
        }
        return urlData;
    }

    //Filter Function
    function CommonFilter() {
        var companyName = $('#companyName').val();
        companyName = $('#companyName').val() == "" ? null : $('#companyName').val();

        var productCatId = $('#ddlprodcatid').val();
        productCatId = $('#ddlprodcatid').val() == "" ? 0 : $('#ddlprodcatid').val();
        var productTypeId = $('#ddlprodcattypeid').val();
        productTypeId = $('#ddlprodcattypeid').val() == "" ? 0 : $('#ddlprodcattypeid').val();

        var orderStartDate = $('#orderStartDate').val();
        orderStartDate = $('#orderStartDate').val() == "" ? null : $('#orderStartDate').val();
        var orderEndDate = $('#orderEndDate').val();
        orderEndDate = $('#orderEndDate').val() == "" ? null : $('#orderEndDate').val();

        var resheduleStartDate = $('#resheduleStartDate').val();
        resheduleStartDate = $('#resheduleStartDate').val() == "" ? null : $('#resheduleStartDate').val();
        var resheduleEndDate = $('#resheduleEndDate').val();
        resheduleEndDate = $('#resheduleEndDate').val() == "" ? null : $('#resheduleEndDate').val();

        var regdNo = $('#regdNo').val();
        regdNo = $('#regdNo').val() == "" ? null : $('#regdNo').val();

        var phoneNo = $('#phoneNo').val();
        phoneNo = $('#phoneNo').val() == "" ? null : $('#phoneNo').val();

        var custCity = $('#custCity').val();
        custCity = $('#custCity').val() == "" ? null : $('#custCity').val();

        var userId = @loginUserId;
        //userId = $('#userId').val() == "" ? null : $('#userId').val();

        var urlData = GetURLData(orderStartDate, orderEndDate, resheduleStartDate, resheduleEndDate, companyName, productCatId, productTypeId, regdNo, phoneNo, custCity, userId);

        var url = null;
        url = "@ViewData["URLPrefixforProd"]/api/ExchangeOrders/ExchangeListForOrdersQC?companyId=" + @ViewBag.CompanyId + urlData;


        // Destroy the existing DataTable
        table = $('#AllOrderForQCDatatable').DataTable();
        // Destroy the existing DataTable
        table.clear().destroy();
        //Re-Initialize Datatable
        @* DataTable(url); *@

        var hidenchkbox = $('#hdnIsCheckBoxShown').val();
        if (hidenchkbox) {
            DataTable(url);
        }
        else {
            DataTable1(url);
        }

        $('.filters').hide();
    }
    //All Data Export--
    function newexportaction(e, dt, button, config) {
        var self = this;
        var oldStart = dt.settings()[0]._iDisplayStart;
        dt.one('preXhr', function (e, s, data) {
            // Just this once, load all data from the server...
            data.start = 0;
            data.length = 2147483647;
            dt.one('preDraw', function (e, settings) {
                // Call the original action function
                if (button[0].className.indexOf('buttons-copy') >= 0) {
                    $.fn.dataTable.ext.buttons.copyHtml5.action.call(self, e, dt, button, config);
                } else if (button[0].className.indexOf('buttons-excel') >= 0) {
                    $.fn.dataTable.ext.buttons.excelHtml5.available(dt, config) ?
                        $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config) :
                        $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
                }
                dt.one('preXhr', function (e, s, data) {
                    // DataTables thinks the first item displayed is index 0, but we're not drawing that.
                    // Set the property to what it was before exporting.
                    settings._iDisplayStart = oldStart;
                    data.start = oldStart;
                });
                // Reload the grid with the original page. Otherwise, API functions like table.cell(this) don't work properly.
                setTimeout(dt.ajax.reload, 0);
                // Prevent rendering of the full data to the DOM
                return false;
            });
        });
        // Requery the server with the new one-time export settings
        dt.ajax.reload();
    };

    $(function () {
        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }

        $("#regdNo").on("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB &&
                $(this).autocomplete("instance").menu.active) {
                event.preventDefault();
            }
        })
            .autocomplete({
                minLength: 3,
                source: function (request, response) {
                    $.get("@URLPrefixforProd/QCIndex/OrdersForQC?handler=SearchRegdNo", {
                        term: extractLast(request.term)
                    }, response);
                },
                focus: function () {
                    // prevent value inserted on focus
                    return false;
                },
                open: function (event, ui) {
                    // Get the menu element
                    var menu = $(this).autocomplete("widget");

                    // Set max-height and overflow properties
                    menu.css("max-height", "200px");
                    menu.css("overflow-y", "auto");
                },
                select: function (event, ui) {
                    var terms = split(this.value);
@*                     console.log(terms);
 *@                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);

                    this.value = ui.item.value;
                    return false;
                }
            });
    })
    //added for checkbox start
    $('#select_all').on('click', function () {
        debugger;
        $('#openPopup').prop('disabled', false);
        var counter = 0;
        $('.checkboxinput').each(function () {
            if (this.checked) {
                this.checked = false;
            }
        });
        var parentTable = $(this).parents().find('.dataTables_wrapper').attr('id');
        if (this.checked) {
            $('#' + parentTable + ' .checkboxinput').each(function () {
                if (counter < 11) {
                    this.checked = true;
                    counter++;
                }
            });
        } else {
            $('#' + parentTable + ' .checkboxinput').each(function () {
                this.checked = false;
                counter--; // Corrected: use decrement operator
                $('#openPopup').prop('disabled', true);

            });
        }
        OnCheckBoxCheck();
    });

    //new
    function OnCheckBoxCheck() {
        debugger;
        let counter = 0;
        $('#loader').hide();

        $('.checkboxinput').each(function () {
            if (this.checked) {
                counter++;
            } else {
                
            }
            
        });

        if (counter > 10) {
            Swal.fire({
                title: "Failed!",
                text: "You can only select up to 10 Orders.",
                icon: 'error',
                confirmButtonText: 'Ok',
                customClass: {
                    confirmButton: 'btn btn-dark'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    location.reload(); // Reloads the page
                }
            });
        }

        let flag = counter > 0;
        if (flag) {
            $('#exportbtn').prop('disabled', false);
        } else {
            $('#exportbtn').prop('disabled', true);
        }
        $('#loader').hide();
    }



    $("#exportbtn").click(function (event) {
         $('#loader').show();
        var searchIDs = "";
        $("#hdnExchangeorderIds").val("");
        $('.checkboxinput').each(function () {
            if (this.checked) {
                searchIDs += this.value + ",";
            }
        });
        searchIDs = searchIDs.replace(/,\s*$/, "");
        $("#hdnExchangeorderIds").val(searchIDs);
        $("#exportForm").submit();
    });


    //end for checkbox

    // Get the popup and overlay elements
    const popup = document.getElementById("popup");
    const overlay = document.getElementById("overlay");

    // Get the button to open the popup
    var openButton = document.getElementById("openPopup");

    // Get the close button
    var closeButton = document.getElementById("closePopup");

    // Function to open the popup
    function openPopup() {
        popup.style.display = "block";
        overlay.style.display = "block";
    }

    // Function to close the popup
    function closePopup() {
        popup.style.display = "none";
        overlay.style.display = "none";
    }

    // Event listener for the open button
    openButton.addEventListener("click", openPopup);

    // Event listener for the close button
    closeButton.addEventListener("click", closePopup);


    //add for select all checks
     $("#selectOption").change(function (event) {
         $('#loader').show(); 
        var searchIDs = "";
        $("#hdnExchangeorderIds").val("");
        $('.checkboxinput').each(function () {
            if (this.checked) {
                searchIDs += this.value + ",";
            }
        });
        searchIDs = searchIDs.replace(/,\s*$/, "");
        $("#hdnExchangeorderIds").val(searchIDs);
        var selectedUserIdv = $("#selectOption").val();

        var selectElement = document.getElementById("selectOption");
        var hiddenInputElement = document.getElementById("hdnassignUserId");

        // Listen for changes in the select element
        selectElement.addEventListener("change", function () {
            // Update the value of the hidden input to the selected option's value
            hiddenInputElement.value = this.value;
        });

        // Assign values to variables
        var selectedUserId = $("#selectOption").val();
        var MyIds = $("#hdnExchangeorderIds").val();
        var assignUserId = $("#hdnassignUserId").val();
        var isCheckBoxShown = $("#hdnIsCheckBoxShown").val(); // Modify this according to your requirement

        $.get("@URLPrefixforProd/QCIndex/OrdersForQC?handler=AllocateOrders&MyIds=" + MyIds + "&IsCheckBoxShown=" + isCheckBoxShown + "&assignUserId=" + selectedUserId).done(function (data) {
           
            closePopup();

            $("<div>").text(data).dialog({
                modal: true,
                title: "Message",
                buttons: {
                    "OK": function () {
                        $(this).dialog("close");
                        location.reload(); // Reloads the existing page
                    }
                }
            });

           
        });




    }); 


</script>