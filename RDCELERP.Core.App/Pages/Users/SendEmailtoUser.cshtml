@page
@model RDCELERP.Core.App.Pages.Users.SendEmailtoUserModel
@{
    ViewData["Title"] = "User List";
    Layout = "_Layout";
    RDCELERP.Model.Base.AccessRuleViewModel accessRule = (RDCELERP.Model.Base.AccessRuleViewModel)ViewBag.AccessRule;
    var URLPrefixforProd = ViewData["URLPrefixforProd"];
}
@if (ViewData["UserAuth"] != null)
{
    <script type="text/javascript">
           alert("@ViewData["UserAuth"]");
    </script>
}
@if (accessRule != null)
{
    <div class="row">
       <input type="hidden" asp-for="ListNA" id="hdnListNA" /> 
         <div class="col-md-12">
            <div class="row">
                <div class="col-12 mb-4">
                    <div class="card border-0 shadow">
                        <div class="card-header">
                            <div class="row align-items-center">
                                <div class="col">
                                    <h2 class="fs-5 fw-bold mb-0">Users</h2>
                                </div>

                            </div>
                        </div>

                        <div class="card-body">
                           
                            <div class="row datefilter mt-2 mb-4">
                                <div class="col-md-4 mb-2">
                                    <form method="post" enctype="multipart/form-data" id="userListForm">
                                        <input type="hidden" asp-for="UserVM.UserIdList" id="hdnUserIdList" />

                                        <input type="button" value="Send Email" class="btn btn-primary" id="SendEmailBtn">
                                    </form>
                                </div>

                                
                                <div class="col-md-8 text-right datefilter-right">
                                    <input type="text" class="form-control d-inline mb-2" id="startdate" placeholder="Start Date">
                                    <input type="text" class="form-control d-inline mb-2" id="enddate" placeholder="End Date">
                                    @*<input type="submit" class="d-inline btn btn-primary" value="Submit">*@
                                    <button id="filter-dates" disabled="disabled" class="btn btn-primary">Filter</button>
                                </div>

                            </div>

                            <div class="table-responsive">
                                <table id="UserDatatable" class="table align-items-center table-flush" border="1">
                                    <thead class="thead-light">
                                        <tr>
                                            <th class="all">UserId</th>
                                            <th class="all">Action</th>
                                            <th class="all">Image</th>
                                            <th class="all">First Name</th>
                                            <th class="all">Last Name</th>
                                            <th class="all">Role</th>
                                            <th class="all">Company</th>
                                            <th class="all">Date</th>
                                        </tr>
                                    </thead>
                                   
                                </table>
                            </div>


                        </div>

                    </div>
                </div>
            </div>
        </div>
        <!--bootstrap pop up delete confirmation dialog-->
        <div class="modal fade" id="delete-conformation" tabindex="-1" role="dialog" aria-labelledby="deleteconformation">
            <div class="modal-dialog" style="width:501px !important;margin:0 auto;">
                <div class="modal-content">
                    <div class="modal-header" style="background:#d9534f;color:white;">
                        <h4 class="modal-title" id="delete-conformation">
                            Delete Confirmation
                        </h4>
                    </div>
                    <form method="post">
                        <div class="modal-body">
                            <div class="row">
                                <div class="form-group">
                                    <input type="hidden" asp-for="TblUserRoleObj.UserRoleId" id="hdnUserRoleId" />
                                    <div class="col-sm-12">
                                        <span>
                                            Are you sure you want to delete?
                                        </span>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-bs-dismiss="modal">Cancel</button>
                            <input type="submit" asp-page-handler="Delete" class="btn btn-danger" value="Delete" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

}


<script src="~/NewLayout/assets/js/jquery.dataTables.min.js"></script>
<script src="~/NewLayout/vendor/jquery-ui/jquery-ui.js"></script>
<script src="~/NewLayout/assets/js/exportTable.js"></script>
<script type="text/javascript">

    var table = null;
    $(document).ready(function () {
        var url = "@URLPrefixforProd/api/ListPage/GetSendEmailtoUserList?roleId=" + @ViewBag.RoleId ;
        var startDate = $('#startdate').val();
        var endDate = $('#enddate').val();
        $('#startdate, #enddate').change(function () {
            if ($('#startdate').val() != '' && $('#enddate').val() != '') {
                $('#filter-dates').prop('disabled', false);
            } else {
                $('#filter-dates').prop('disabled', true);
            }
        });
        DataTable(url, startDate, endDate);

        //date range Filter
        $('#filter-dates').click(function () {

            startDate = $('#startdate').val();
            endDate = $('#enddate').val();

            var url = "@URLPrefixforProd/api/ListPage/GetSendEmailtoUserList?roleId=" + @ViewBag.RoleId + '&startDate=' + startDate + ' &endDate=' + endDate;
            table = $('#UserDatatable').DataTable();
            // Destroy the existing DataTable
            table.destroy();
            DataTable(url,startDate,endDate);
        });

    });


        $("#SendEmailBtn").click(function () {
        var arr = []; $('#hdnUserIdList').val("");
        $('.checkboxinput:checked').each(function () {
            arr.push($(this).val());
        $('#hdnUserIdList').val(arr);
        $("#userListForm").submit();
        });
    });


    //this is only display bootstrap modal pop up dialog
    function deleteConfirm(_userRoleId) {
        //alert(_dealId);
        $('#hdnUserRoleId').val(_userRoleId);
        $('#delete-conformation').modal('show');
    }

    $(document).ready(function () {
        $("#startdate").datepicker({
            defaultDate: null,
            onSelect: function (selectedDate) {
                $("#enddate").datepicker("option", "minDate", selectedDate);
            }
        });
        $("#enddate").datepicker({
            defaultDate: null,

        });
    });
    //data table
    function DataTable(url, startDate, endDate) {
        table = $('#UserDatatable').dataTable({
            "order": [[0, 'desc']],
            "processing": true,
            "serverSide": true,
            "scrollX": true,
            "paging": true,
            "filter": true,
            "data": { startDate: startDate, endDate: endDate },

            "dom": 'Bfrtlp',
            "buttons": [
                {
                    extend: 'excel', text: '<div class="exportbtnwrapper"><button class="btn btn-primary" id="exportbtn"><i class="fa-solid fa-download"></i> Download Excel</button></div>', id: "exportbtn",
                    title: 'User List',
                    action: newexportaction,
                    exportOptions: {
                        modifier: {
                            // DataTables core
                            order: 'index',  // 'current', 'applied', 'index',  'original'
                            page: 'all',      // 'all',     'current' for export all pages data
                            search: 'none'     // 'none',    'applied', 'removed'
                        },
                        columns: ':not(.notexport)'
                    }
                }
            ],
            "oLanguage": {
                "sEmptyTable": "No User found"
            },
            "ajax": {
                "url": url,
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs": [{
                "targets": [0],
                "visible": false,
                "searchable": false
            }],
            "responsive": true,
            "columns": [
                { "data": "userId", "name": "UserId", "autoWidth": true, "orderable": false },
                { "data": "action", "name": "Action", "autoWidth": true, "orderable": false },
                { "data": "imageName", "name": "ImageName", "autoWidth": true, "orderable": true },
                { "data": "firstName", "name": "FirstName", "autoWidth": true, "orderable": true },
                { "data": "lastName", "name": "LastName", "autoWidth": true, "orderable": true },

                { "data": "role", "name": "Role", "autoWidth": true, "orderable": true },
                { "data": "companyName", "name": "CompanyName", "autoWidth": true, "orderable": true },
                { "data": "createdDate", "name": "CreatedDate", "autoWidth": true, "orderable": true },
            ]
        });
    }

    //All Data Export--
    function newexportaction(e, dt, button, config) {
        var self = this;
        var oldStart = dt.settings()[0]._iDisplayStart;
        dt.one('preXhr', function (e, s, data) {
            // Just this once, load all data from the server...
            data.start = 0;
            data.length = 2147483647;
            dt.one('preDraw', function (e, settings) {
                // Call the original action function
                if (button[0].className.indexOf('buttons-copy') >= 0) {
                    $.fn.dataTable.ext.buttons.copyHtml5.action.call(self, e, dt, button, config);
                } else if (button[0].className.indexOf('buttons-excel') >= 0) {
                    $.fn.dataTable.ext.buttons.excelHtml5.available(dt, config) ?
                        $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config) :
                        $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
                }
                dt.one('preXhr', function (e, s, data) {
                    // DataTables thinks the first item displayed is index 0, but we're not drawing that.
                    // Set the property to what it was before exporting.
                    settings._iDisplayStart = oldStart;
                    data.start = oldStart;
                });
                // Reload the grid with the original page. Otherwise, API functions like table.cell(this) don't work properly.
                setTimeout(dt.ajax.reload, 0);
                // Prevent rendering of the full data to the DOM
                return false;
            });
        });
        // Requery the server with the new one-time export settings
        dt.ajax.reload();
    };
    //For Export Buttons available inside jquery-datatable "server side processing" - End


        $(document).ready(function(){
$(document).on("change", ".checkboxinput", function() {
        if(this.checked) {

           $('.checkboxinput').prop('checked', false);
                $(this).prop('checked', true);
        }
   
});
});

 $(document).ready(function () {
        var list = $('#hdnListNA').val();
        alert(list);
        if (list > 0) {
            debugger
                  Swal.fire({
                    title: '@Model.title',
                    text: '@Model.text',
                    icon: 'success',
                    confirmButtonText: 'Ok',
                    customClass: {
                      confirmButton: 'btn btn-dark'
                      }

                  });
                    $('#hdnListNA').val("");
        } else {
                  Swal.fire({
                    title: '@Model.title',
                    text: '@Model.text',
                    icon: 'warning',
                    confirmButtonText: 'Ok',
                    customClass: {
                      confirmButton: 'btn btn-dark'
                    }
                  });
                    $('#hdnListNA').val("");
        }
   });
</script>


